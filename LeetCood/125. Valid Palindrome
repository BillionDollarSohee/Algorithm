```java
class Solution {
    public boolean isPalindrome(String s) {
        int start = 0;
        int end = s.length() - 1;

        while ( start < end ) {
            if(!Character.isLetterOrDigit(s.charAt(start))) {
                start++;
            } else  if (!Character.isLetterOrDigit(s.charAt(end))) {
                end--;
            } else {
                if (Character.toLowerCase(s.charAt(start)) != Character.toLowerCase(s.charAt(end))) {
                    return false;
                }

                start++;
                end--;
            }
        }

        return true;
    }
}

// 결과
"A man, a plan, a canal: Panama" -> true
"race a car" -> false
" " -> true

// 성능은 떨어지지만 간결한 코드
class Solution {
    public boolean isPalindrome(String s) {
        String filler = s.replaceAll("[^A-Za-z0-9]", "").toLowerCase();
        String reverse = new StringBuilder(filler).reverse().toString();
        return filler.equals(reverse);
    }
}


// 코틀린 풀이
class Solution {
    fun isPalindrome(s: String): Boolean {
        var start = 0
        var end = s.length - 1

        while (start < end) {
            when {
                !Character.isLetterOrDigit(s[start]) -> start++
                !Character.isLetterOrDigit(s[end]) -> end--
                else -> {
                    if (Character.toLowerCase(s[start]) != Character.toLowerCase(s[end])) {
                        return false
                    }
                    start++
                    end--
                }
            }
        }

        return true
    }
}

```
